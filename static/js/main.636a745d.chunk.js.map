{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["saveItems","items","localStorage","setItem","JSON","stringify","App","useState","itemName","quantity","isSelected","setItems","inputValue","setInputValue","useEffect","parse","getItem","handleAddButtonClick","length","newItem","newItems","className","src","logo","alt","value","onChange","event","target","onKeyPress","key","placeholder","icon","faPlus","onClick","map","item","index","toggleComplete","faCheckCircle","faCircle","splice","deleteItem","faTrash","quantityDecrease","faChevronLeft","quantityIncrease","faChevronRight","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.636a745d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, {useEffect, useState} from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {\r\n    faChevronRight,\r\n    faChevronLeft,\r\n    faCircle,\r\n    faCheckCircle,\r\n    faPlus,\r\n    faTrash,\r\n} from '@fortawesome/free-solid-svg-icons';\r\n\r\n\r\nconst saveItems = (items) => {\r\n    localStorage.setItem('shopping-list', JSON.stringify(items));\r\n};\r\n\r\n\r\nfunction App() {\r\n\r\n    const [items, setItems] = useState([\r\n        {itemName: 'Kalem', quantity: 1, isSelected: false},\r\n        {itemName: 'Defter', quantity: 3, isSelected: true},\r\n        {itemName: 'Kitap', quantity: 2, isSelected: false},\r\n    ]);\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    useEffect(() => {\r\n        setItems(JSON.parse(localStorage.getItem('shopping-list')));\r\n    }, []);\r\n\r\n\r\n    const deleteItem = (index) => {\r\n        const newItems = [...items];\r\n        newItems.splice(index, 1);\r\n        setItems(newItems);\r\n        saveItems(newItems);\r\n    };\r\n\r\n    const quantityIncrease = (index) => {\r\n        const newItems = [...items];\r\n        newItems[index].quantity++;\r\n        setItems(newItems);\r\n        saveItems(newItems);\r\n    };\r\n\r\n    const quantityDecrease = (index) => {\r\n        const newItems = [...items];\r\n        if (newItems[index].quantity > 0) {\r\n            newItems[index].quantity--;\r\n        }\r\n        setItems(newItems);\r\n        saveItems(newItems);\r\n    };\r\n\r\n    const handleAddButtonClick = () => {\r\n        if (inputValue.length < 3) {\r\n            return;\r\n        }\r\n        const newItem = {\r\n            itemName: inputValue,\r\n            quantity: 1,\r\n            isSelected: false,\r\n        };\r\n        let newItems = [];\r\n        if (items) {\r\n            newItems = [...items, newItem];\r\n        } else {\r\n            newItems = [newItem];\r\n        }\r\n        setItems(newItems);\r\n        setInputValue('');\r\n        saveItems(newItems);\r\n    };\r\n\r\n    const toggleComplete = (index) => {\r\n        const newItems = [...items];\r\n        newItems[index].isSelected = !newItems[index].isSelected;\r\n        setItems(newItems);\r\n        saveItems(newItems);\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"app-background\">\r\n            <img src={logo} className=\"App-logo\" alt=\"logo\"/>\r\n            <div className='main-container'>\r\n                <div className='add-item-box'>\r\n                    <input value={inputValue}\r\n                           onChange={(event) => setInputValue(event.target.value)}\r\n                           onKeyPress={(event) => {\r\n                               if (event.key === 'Enter') {\r\n                                   handleAddButtonClick();\r\n                               }\r\n                           }}\r\n                           className='add-item-input'\r\n                           placeholder='Isim Giriniz...'\r\n                    />\r\n                    <FontAwesomeIcon icon={faPlus} onClick={() => handleAddButtonClick()}/>\r\n                </div>\r\n                <div className='item-list'>\r\n                    {items &&\r\n                    items.map((item, index) => (\r\n                        <div className='item-container' key={index}>\r\n                            <div className='item-name' onClick={() => toggleComplete(index)}>\r\n                                <div className='item-row'>\r\n                                    <FontAwesomeIcon icon={item.isSelected ? faCheckCircle : faCircle}/>\r\n                                    <span>{item.itemName}</span>\r\n                                </div>\r\n                            </div>\r\n                            <div className='right-container'>\r\n                                <button className='button delete' onClick={() => deleteItem(index)}>\r\n                                    <FontAwesomeIcon icon={faTrash}/>\r\n                                </button>\r\n\r\n                                <div className='quantity'>\r\n                                    <button className='button' onClick={() => quantityDecrease(index)}>\r\n                                        <FontAwesomeIcon icon={faChevronLeft}/>\r\n                                    </button>\r\n                                    <span> {item.quantity} </span>\r\n                                    <button className='button' onClick={() => quantityIncrease(index)}>\r\n                                        <FontAwesomeIcon icon={faChevronRight}/>\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}